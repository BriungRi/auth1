2/15:
- I set up the Spring Boot dependencies and built a dummy endpoint to learn how to use the framework.

Notes: We initially had planned on building an API stub at this time, but decided it would be unnecessary given how simple
it is to set up routes in Spring Boot, and that we weren't working on any features which depended on it

2/22:
- I stubbed out the /register endpoint this week. We planned on building out this feature fully, but missed this goal due
to a miscommunication in Asana. This might set back our integration testing a little bit, but we have the logic for authenticating
tokens done ahead of schedule, so we should still be on course.
- We had a productive discussion regarding the interface between the business logic (which we will designate as controller)
and the API. We decided that the API can handle basic sanity checks on the parameters, and that we would overload the API instead
of the controller in cases where we might want some flexibility (such as logging in with email || username)

Notes: Had a lot of trouble working out kinks in configurations and framework issues. Still don't have things fully working with
IntelliJ but managed to find workarounds for everything in the terminal.

3/1:
- I wired up the /register endpoint this week, and also implemented the /login and /checkAuthToken endpoints
- I wrote unit tests for all of these endpoints. If something breaks it's not my fault!
- Next week it's my turn to do integration tests.

3/8:
- Added endpoints for /resetPassword and /getPasswordResetToken
- I think we can use the setup I'd been doing for unit testing (sans the mocking) for our integration tests
- Integration tests: next time, I promise!

3/22:
- We tried to do integration testing this week, but it required us to understand some of the parts
of Spring that we had been handwaving over before. With the essay hanging over our heads this week,
none of us really managed to figure it out. We'll try to tackle it again next week, but if we
still don't have any success, then we'll just stick to testing the system by hand, and moving on with
building the rest of our features.